{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Desktop\\\\projects\\\\ReactNative\\\\Guess-A-Number\\\\Screens\\\\StartGameScreen.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Card from \"../components/Card\";\nimport Colors from \"../constants/Colors\";\nimport Input from \"../components/Input\";\nimport NumberContainer from \"../components/NumberContainer\";\nimport DefaultStyles from \"../constants/default-styles\";\n\nvar StartGameScreen = function StartGameScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredValue = _useState2[0],\n      setEnteredValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmed = _useState4[0],\n      setConfirmed = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedNumber = _useState6[0],\n      setSelectedNumber = _useState6[1];\n\n  var numberInputHandler = function numberInputHandler(inputText) {\n    setEnteredValue(inputText.replace(/[^0-9]/g, \"\"));\n  };\n\n  var resetInputHandler = function resetInputHandler() {\n    setEnteredValue(\"\");\n    setConfirmed(false);\n  };\n\n  var confirmInputHandler = function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredValue);\n\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert(\"Invalid Number\", \"Input has to be a number between 1 to 99.\", [{\n        text: \"Okay\",\n        style: \"destructive\",\n        onPress: resetInputHandler\n      }]);\n      return;\n    }\n\n    setConfirmed(true);\n    setSelectedNumber(chosenNumber);\n    setEnteredValue(\"\");\n    Keyboard.dismiss();\n  };\n\n  var confirmedOutput;\n\n  if (confirmed) {\n    confirmedOutput = React.createElement(Card, {\n      style: styles.summaryContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: DefaultStyles.bodyText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"You Selected \"), React.createElement(NumberContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \" \", selectedNumber, \" \"), React.createElement(Button, {\n      title: \"START GAME\",\n      onPress: function onPress() {\n        return props.onStartGame(selectedNumber);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \" Start a New Game \"), React.createElement(Card, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \" Select a Number\"), React.createElement(Input, {\n    style: styles.input,\n    keyboardType: \"number-pad\",\n    maxLength: 2,\n    onChangeText: numberInputHandler,\n    value: enteredValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Reset\",\n    onPress: resetInputHandler,\n    color: Colors.accent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Confirm\",\n    onPress: confirmInputHandler,\n    color: Colors.primary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  })))), confirmedOutput));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    paddingTop: 10,\n    alignItems: \"center\"\n  },\n  input: {\n    width: 50,\n    textAlign: \"center\"\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 15\n  },\n  inputContainer: {\n    width: 300,\n    maxWidth: \"80%\",\n    alignItems: \"center\"\n  },\n  title: {\n    fontSize: 18,\n    marginVertical: 10,\n    fontFamily: \"open-sans-bold\"\n  },\n  button: {\n    width: 100\n  },\n  summaryContainer: {\n    marginTop: 20,\n    alignItems: \"center\",\n    paddingHorizontal: 40\n  }\n});\nexport default StartGameScreen;","map":{"version":3,"sources":["D:/Desktop/projects/ReactNative/Guess-A-Number/Screens/StartGameScreen.js"],"names":["React","useState","Card","Colors","Input","NumberContainer","DefaultStyles","StartGameScreen","props","enteredValue","setEnteredValue","confirmed","setConfirmed","selectedNumber","setSelectedNumber","numberInputHandler","inputText","replace","resetInputHandler","confirmInputHandler","chosenNumber","parseInt","isNaN","Alert","alert","text","style","onPress","Keyboard","dismiss","confirmedOutput","styles","summaryContainer","bodyText","onStartGame","screen","title","inputContainer","input","buttonContainer","button","accent","primary","StyleSheet","create","flex","paddingTop","alignItems","width","textAlign","flexDirection","justifyContent","paddingHorizontal","maxWidth","fontSize","marginVertical","fontFamily","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Button,\n  TouchableWithoutFeedback,\n  Keyboard,\n  Alert,\n} from \"react-native\";\nimport Card from \"../components/Card\";\nimport Colors from \"../constants/Colors\";\nimport Input from \"../components/Input\";\nimport NumberContainer from \"../components/NumberContainer\";\nimport DefaultStyles from \"../constants/default-styles\";\n\nconst StartGameScreen = (props) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [confirmed, setConfirmed] = useState(false);\n  const [selectedNumber, setSelectedNumber] = useState();\n\n  const numberInputHandler = (inputText) => {\n    setEnteredValue(inputText.replace(/[^0-9]/g, \"\"));\n  };\n\n  const resetInputHandler = () => {\n    setEnteredValue(\"\");\n    setConfirmed(false);\n  };\n\n  const confirmInputHandler = () => {\n    const chosenNumber = parseInt(enteredValue);\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert(\n        \"Invalid Number\",\n        \"Input has to be a number between 1 to 99.\",\n        [{ text: \"Okay\", style: \"destructive\", onPress: resetInputHandler }]\n      );\n      return;\n    }\n    setConfirmed(true);\n    setSelectedNumber(chosenNumber);\n    setEnteredValue(\"\");\n    Keyboard.dismiss();\n  };\n\n  let confirmedOutput;\n  if (confirmed) {\n    confirmedOutput = (\n      <Card style={styles.summaryContainer}>\n        <Text style={DefaultStyles.bodyText}>You Selected </Text>\n        <NumberContainer> {selectedNumber} </NumberContainer>\n        <Button\n          title=\"START GAME\"\n          onPress={() => props.onStartGame(selectedNumber)}\n        />\n      </Card>\n    );\n  }\n\n  return (\n    <TouchableWithoutFeedback\n      onPress={() => {\n        Keyboard.dismiss();\n      }}\n    >\n      <View style={styles.screen}>\n        <Text style={styles.title}> Start a New Game </Text>\n        <Card style={styles.inputContainer}>\n          <Text> Select a Number</Text>\n          <Input\n            style={styles.input}\n            keyboardType=\"number-pad\"\n            maxLength={2}\n            onChangeText={numberInputHandler}\n            value={enteredValue}\n          />\n          <View style={styles.buttonContainer}>\n            <View style={styles.button}>\n              <Button\n                title=\"Reset\"\n                onPress={resetInputHandler}\n                color={Colors.accent}\n              />\n            </View>\n            <View style={styles.button}>\n              <Button\n                title=\"Confirm\"\n                onPress={confirmInputHandler}\n                color={Colors.primary}\n              />\n            </View>\n          </View>\n        </Card>\n        {confirmedOutput}\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    paddingTop: 10,\n    alignItems: \"center\",\n  },\n  input: {\n    width: 50,\n    textAlign: \"center\",\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 15,\n  },\n  inputContainer: {\n    width: 300,\n    maxWidth: \"80%\",\n    alignItems: \"center\",\n  },\n  title: {\n    fontSize: 18,\n    //fontWeight: \"bold\",\n    marginVertical: 10,\n    fontFamily: \"open-sans-bold\",\n  },\n  button: { width: 100 },\n  summaryContainer: {\n    marginTop: 20,\n    alignItems: \"center\",\n    paddingHorizontal: 40,\n  },\n});\n\nexport default StartGameScreen;\n"]},"metadata":{},"sourceType":"module"}